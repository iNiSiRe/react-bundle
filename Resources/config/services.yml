parameters:
  pool.workers: 2

services:

    React\EventLoop\Factory: ~

    React\EventLoop\LoopInterface:
        class: React\EventLoop\LoopInterface
        factory: ['@React\EventLoop\Factory', 'create']

    react.loop:
        alias: React\EventLoop\LoopInterface
        public: true

    react.socket.server:
        class: React\Socket\Server
        arguments: ["0.0.0.0:8080", '@react.loop']

    http_foundation.factory:
        class: Symfony\Bridge\PsrHttpMessage\Factory\HttpFoundationFactory

    diactoris.factory:
        class: Symfony\Bridge\PsrHttpMessage\Factory\DiactorosFactory

    react.http.server:
        public: true
        class: inisire\ReactBundle\Server\Server
        arguments:
          - "@react.loop"
          - "@react.socket.server"
          - "@kernel"
          - "@http_foundation.factory"
          - "@diactoris.factory"
          - "@monolog.logger"

    inisire\ReactBundle\Threaded\WorkerPoolFactory:
        class: inisire\ReactBundle\Threaded\WorkerPoolFactory
        arguments:
          - '%kernel.project_dir%/vendor/autoload.php'
          - '@inisire\ReactBundle\Threaded\KernelFactoryInterface'
          - '%pool.workers%'

    inisire\ReactBundle\Threaded\Pool:
        class: inisire\ReactBundle\Threaded\Pool
        shared: true
        factory: ['@inisire\ReactBundle\Threaded\WorkerPoolFactory', "create"]
        calls:
          - [setLogger, ['@Psr\Log\LoggerInterface']]
          - [setLoop, ['@react.loop']]

    worker.pool:
        public: true
        alias: inisire\ReactBundle\Threaded\Pool
        shared: true

